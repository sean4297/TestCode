@model IEnumerable<QuotationAppV1.Models.Quotation>
@using GridMvc.Html

@helper Truncate(string value, int length)
{
    if (value.Length <= length)
    {
        @value
    }
    else
    {
        @value.Substring(0, length)<span>...</span>
    }
}

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quote)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateAdded)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quote)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateAdded)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.QuotationID }) |
            @Html.ActionLink("Details", "Details", new { id=item.QuotationID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.QuotationID })
        </td>
    </tr>
}

</table>*@



@Html.Grid(Model).Columns(cols =>
{
    cols.Add(col => col.Author).Titled("Author").Sortable(true).SetWidth(80);
    cols.Add(col => col.Quote).Titled("Quote").SetWidth(350);
    cols.Add(col => col.Category.Name).Titled("Category").SetWidth(100);
    cols.Add(col => col.DateAdded).Titled("Date Added").SetWidth(250);
    
    
    //cols.Add(col => col.Quote).Titled("Quote").SetWidth(250).RenderValueAs(a => Truncate(a.Quote, 35)).Encoded(false);
    //cols.Add(col => col.Category).Titled("Category").SetWidth(250).RenderValueAs(a => Truncate(a.Category.Name, 25)).Encoded(false);
    //cols.Add(col => col.DateAdded).Titled("Date Added").SetWidth(250).RenderValueAs(a => Truncate(a.DateAdded.ToShortDateString(), 35)).Encoded(false);
    //cols.Add(col => col.Category.Name).SetWidth(350).RenderValueAs(a => Truncate(a.Category.Name, 35)).Encoded(false);
    //cols.Add(col => col.Price).Sortable(true).SetWidth(80).Format("{0:c}");
    cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Edit", "Edit", new { id=a.QuotationID }));
    cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Details", "Details", new { id = a.QuotationID }));
    cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Delete", "Delete", new { id = a.QuotationID }));
}

).WithPaging(10)

