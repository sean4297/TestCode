@model IEnumerable<QuotationAppV1.Models.Quotation>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success btn-xs" })
</p>

@using (Html.BeginForm())
{
    
        <input type="submit" value="Search" class="btn btn-success btn-xs" /> @Html.TextBox("searchString") 
        if(ViewBag.switch1){ 
            @Html.ActionLink("Clear", "Index", null, new { @class = "btn btn-success btn-xs" })
        }

}


@Html.Grid(Model).Columns(cols =>
            {
                cols.Add(s => s.Author).SetWidth(110).Sortable(true);
                cols.Add(s => s.Category.Name).Sortable(true).Titled("Category");
                cols.Add(s => s.Quote);
                cols.Add(s => s.DateAdded).Sortable(true).Format("{0: dd/MM/yyyy}");

                cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Edit", "Edit", new { id = a.QuotationID }, new { @class = "btn btn-primary btn-xs" }));
                cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Details", "Details", new { id = a.QuotationID }, new { @class = "btn btn-primary btn-xs" }));
                cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Delete", "Delete", new { id = a.QuotationID }, new { @class = "btn btn-primary btn-xs" }));
            }).WithPaging(10)


